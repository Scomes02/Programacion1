Ejercicio 1
Algoritmo Arreglo100NumPares
	//. Desarrollar un algoritmo que permita almacenar en un arreglo los cien primeros n�meros pares.	Luego recorrer el arreglo y mostrar los n�meros que contiene el arreglo.
	
	Definir TamanioArreglo Como Entero
	TamanioArreglo=100
	Dimension NumPares[TamanioArreglo] 
	
	Para i<-0 Hasta TamanioArreglo Con Paso 1 Hacer
		si i%2=0 Entonces //divide el numero hasta llegar a 0 o lo mas cercano a 0.
			Escribir i " es un numero par." 
		FinSi
	FinPara	
	
FinAlgoritmo

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ejercicio 2
Algoritmo Arreglo20Numero
	//. Desarrollar un algoritmo que llene un arreglo con 20 n�meros de forma aleatoria entre 0 y 100 . 
	//Luego busque en el arreglo, un n�mero generado de forma aleatoria entre 0 y 100, y finalmente muestre: 
	//a)- El n�mero a buscar, b)- El arreglo, c)- Si encontr� el n�mero, la posici�n donde fue hallado, o d)- Si no encontr� el �mero.

	definir aleat1,aleat2 Como Entero
	Dimension arreglo(20)
	
	Para i<-0 Hasta 19 Con Paso 1 Hacer
		aleat1= azar(100) //Genera 100 numeros al azar para el arreglo
		arreglo(i) = i
		aleat2=azar(100) //Genera 100 numeros al azar para comparar con el arreglo
		si aleat2=aleat1 //Compara silos dos azares son iguales
 			Escribir "El numero a buscar es:" aleat2
			Escribir "El arreglo es:" aleat1
			Escribir "***Numero encontrado***,La posicion es:" arreglo(i)
		SiNo
			si aleat2<>aleat1 //Comapara si los dos azares son distintos
				escribir "El numero a buscar es:" aleat2 
				Escribir "El arreglo es:" aleat1
				Escribir "No se encontro el numero"
			FinSi
		FinSi
	FinPara
	
FinAlgoritmo

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ejercicio 3
Algoritmo NumeroPrimo_NoPrimo
	//Desarrollar un algoritmo que permita obtener los n�meros primos del rango de valores del 1 al 100. Cuando encuentre un n�mero primo, lo deber� almacenar en un arreglo.
	//Finalmente se deber� recorrer el arreglo, mostrar los n�meros primos encontrados y en qu� posici�n del arreglo se encuentra. 
	//Como ayuda se adjunta este algoritmo que se encarga de determinar si un n�mero ingresado por el usuario es primo o no.
	
	Dimension arreglo(101)
	Repetir
		Escribir "/////////////////////"
		Escribir "Coloca un numero"
		Leer a
		Escribir "/////////////////////"
		Escribir "               "
		contador <-0
		
		Para i<-1 Hasta  a Hacer
			arreglo[i]=i
			si a%i=0 Entonces //divide el numero por el arreglo para saber si es primo o no
				
				
				contador <-contador+1
				
			FinSi
			
		FinPara
		
		si contador=2 Entonces
			
			Escribir "===================================================="
			Escribir a, " es un numero primo, esta en la posicion: " arreglo[i]
			
		SiNo
			
			Escribir "===================================================="
			Escribir a, " no es un numero, esta primo en la posicion: " arreglo[i]
			
		FinSi
		
		Escribir "===================================================="
		Escribir "Desea seguir [1] o salir [2]. " //Permite elegir al usuario si salir o seguir
		Escribir "//////////////////////////////"
		
		leer Opc
		
		si (Opc!=2) Entonces
			arreglo[i]=arreglo[i]+1
		FinSi
		
	Hasta Que Opc=2
	
	Escribir "Gracias por utilizarnos, adios."
	Escribir "/////////////////////"
	
FinAlgoritmo

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ejercicio  4
Algoritmo Contrase�a8Digitos
	//Desarrollar un algoritmo que permita generar una contrase�a aleatoria num�rica de 8 d�gitos. Para ello se deber� utilizar un arreglo de tama�o 8,
	//que permita almacenar en cada una de sus posiciones los d�gitos obtenidos de forma aleatoria. 
	//Finalmente se deber� recorrer nuevamente el arreglo para mostrar la contrase�a obtenida. Para mostrar la contrase�a en una instrucci�n
	//Escribir, investigar acerca de las funciones concatenar() y convertiratexto()
	
	Definir a Como Entero
	
	Dimension arreglo(8)
	
	Para i<-0 Hasta 7 Con Paso 1 Hacer
		a=azar(10)//"a" simboliza numero al azar
		arreglo(i)=a//La posicion que toma "a"
		z = Concatenar(z,(ConvertirATexto(a))) //compila los numeros y los visualiza
	Fin Para
	
	Escribir "Su contrase�a predeterminada es: " z
	
FinAlgoritmo

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ejercicio 5
Algoritmo TaTeTi
	
	Dimension Tab1[3,3]
	Dimension Tab2[3,3]
	
    Para i<-1 Hasta 3 Hacer
        Para j<-1 Hasta 4 Hacer
            Tab1[i,j]<-0
            Tab2[i,j]<-" "
        FinPara
    FinPara
    TurnoJugador1<-Verdadero
    Terminado<-Falso
    Ganador<-Falso
    CantTurnos<-0
    
    Mientras ~ Terminado hacer
        
        // dibuja el tablero
        Borrar Pantalla
        Escribir " "
        Escribir "      ||     ||     "
        Escribir "   ",Tab2[1,1],"  ||  ",Tab2[1,2],"  ||  ",Tab2[1,3]
		
		Escribir "    1||    2||    3"
        Escribir " =====++=====++======"
        Escribir "      ||     ||     "
        Escribir "   ",Tab2[2,1],"  ||  ",Tab2[2,2],"  ||  ",Tab2[2,3]
        Escribir "     4||    5||    6"
        Escribir " =====++=====++======"
        Escribir "      ||     ||     "
        Escribir "   ",Tab2[3,1],"  ||  ",Tab2[3,2],"  ||  ",Tab2[3,3]
        Escribir "     7||    8||    9"
        Escribir " "
        
        Si ~ Ganador y CantTurnos<9 Entonces
		
			// carga auxiliares segun a qu� jugador le toca
            Si TurnoJugador1 Entonces
                Ficha<-'O'; Valor<- 1; Objetivo<-1
                Escribir "Turno del jugador 1 (X)"
            Sino
                Ficha<-'X'; Valor<- 2; Objetivo<-8
                Escribir "Turno del jugador 2 (O)"
            FinSi
            
            // pide la posici�n para colocar la ficha y la valida
            Escribir "Ingrese la Posici�n (1-9):"
            
            Repetir
				Leer Pos
                Si Pos<1 o Pos>9 Entonces
                    Escribir "Posici�n incorrecta, ingrese nuevamente: "
                    Pos<-99;
                Sino
                    i<-trunc((Pos-1)/3)+1
                    j<-((Pos-1) MOD 3)+1
                    Si Tab1[i,j]<>0 Entonces
                        pos<-99
                        Escribir "Posici�n incorrecta, ingrese nuevamente: "
                    FinSi
                FinSi
            Hasta Que Pos<>99
			// guarda la ficha en la matriz tab2 y el valor en tab1
            CantTurnos<-CantTurnos+1
            Tab1[i,j]<-Valor
            Tab2[i,j]<-Ficha
            
            // verifica si gan�, buscando que el producto de las fichas en el tablero de Objetivo
            aux_d1<-1; aux_d2<-1
            Para i<-1 hasta 3 hacer
                aux_i<-1; aux_j<-1
                aux_d1<-aux_d1*Tab1[i,i]
                aux_d2<-aux_d2*Tab1[i,4-i]
                Para j<-1 hasta 3 hacer
					aux_i<-aux_i*Tab1[i,j]
                    aux_j<-aux_j*Tab1[j,i]
                FinPara
                Si aux_i=Objetivo o aux_j=Objetivo Entonces
                    Ganador<-Verdadero
                FinSi
            FinPara
            Si aux_d1=Objetivo o aux_d2=Objetivo Entonces
                Ganador<-Verdadero
            Sino
                TurnoJugador1 <- ~ TurnoJugador1
            FinSi
            
        Sino
            
            Si Ganador Entonces
				
				Escribir "Ganador: "
                Si TurnoJugador1 Entonces
                    Escribir "Jugador 1!"
                Sino
                    Escribir "Jugador 2!"
                FinSi
            Sino
                Escribir "Empate!"
            FinSi
            Terminado<-Verdadero
            
        FinSi
        
    FinMientras
    
FinProceso
